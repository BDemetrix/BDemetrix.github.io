"use strict";class PsyTestsCalculator{constructor(t){this.handler=t,this.errCSS="color: red; border: 2px solid red; font-weight: bold;",this.init()}init(){this.handler.getResult?(this.el=document.querySelector(".js-psy-test-body"),this.el?(this.groups=this.el.querySelectorAll(".js-psy-test-group"),this.groups.length||this._errorMsg(" Не найден селектор .js-psy-test-group")):this._errorMsg(" Не найден селектор .js-psy-test-body")):this._errorMsg(" Не задана функция для возвращения результата теста ")}calc(){let t=0;const s={},e=this.groups.length;for(let n=0;n<e;n++){const e=this.groups[n],i=Array.from(e.querySelectorAll(".js-psy-test-input"));if(!i.length)throw this._errorMsg(" Не найден селектор .js-psy-test-input"),"Некорректная HTML структура теста BecksAlarmScale";i.find((t=>t.checked))||(e.classList.add("_error"),s.error="Не выбран ответ в группе"),s.error||i.forEach((s=>{s.checked?(t+=+s.value,s.setAttribute("checked",!0)):s.setAttribute("disabled",!0)}))}return s.error?(s.errTarget=this.el.querySelector(".js-psy-test-group._error"),s):this.handler.getResult(t)}_errorMsg(t=""){console.log(`%c "${t}" `,this.errCSS),alert("К сожалению тест сломался. \n\nСообщите об этом Инне Моисеевой, пожалуйста! \n\n telegram: @innasteplom")}}class PsyTestsManager{constructor(t){this.handler=t,this.errCSS="color: red; border: 2px solid red; font-weight: bold;",this.init()}init(){if(this.el=document.querySelector(".js-psy-test"),this.el)if(this.testName=this.el.getAttribute("data-test-name"),this.testName||this._errorMsg('Не задано имя теста в data атрибуте блока ".js-psy-test"'),"object"==typeof this.handler){this.inputs=this.el.querySelectorAll(".js-psy-test-input"),this.calcBtn=this.el.querySelector(".js-psy-test-btn-calc"),this.resultContainer=this.el.querySelector(".js-psy-test-result"),this.saveBtns=this.el.querySelectorAll(".js-psy-test-btn-save"),this.againBtn=this.el.querySelector(".js-psy-test-btn-again"),this.moreBtn=this.el.querySelector(".js-psy-test-btn-more");for(let t in this)if(!this[t])return void this._errorMsg(`Ошибка инициализации PsyTestsManager. Не задано поле: ${t}`);this.style=document.querySelector(".js-psy-test-style"),this.againBtn.href=location.href,this.calcBtn.addEventListener("click",(()=>{this._calc()})),this.saveBtns.forEach((t=>{t.addEventListener("click",(()=>{this._save()}))})),this.inputs.forEach((t=>t.addEventListener("change",(()=>{const s=t.closest(".js-psy-test-group._error");s&&(s.classList.remove("_error"),setTimeout((()=>{const t=this.el.querySelector(".js-psy-test-group._error,  .js-psy-test-footer");t&&t.scrollIntoView(!0)}),10))}))))}else this._errorMsg(`Ошибка класса обработчика теста: ${this.testName}. Класс не найден.`);else this._errorMsg('%c Не найден селектор ".js-psy-test" ')}_calc(){let t={};try{t=this.handler.calc()}catch(t){return this._errorMsg(`Ошибка вычисления теста ${this.testName}`),console.log(t),!1}if(t.error)return t.errTarget&&t.errTarget.scrollIntoView(!0),!1;if(!t.modifier||!t.html)throw this._errorMsg(),` Ошибка вычисления результата теста ${this.testName}. `;this.calcBtn.remove(),this.resultContainer.innerHTML=t.html,this.resultContainer.classList.add(`psy-test__info--${t.modifier}`),this.resultContainer.classList.remove("_hidden"),this.againBtn.classList.remove("_hidden"),this.moreBtn.classList.remove("_hidden"),this.saveBtns.forEach((t=>{t.classList.remove("_hidden")})),this.againBtn.href=location.href,this.resultContainer.scrollIntoView();let s=null;t.eventId&&(s=this.el.querySelector(`#${t.eventId}`),this.el.dispatchEvent(new Event(t.eventId,{bubbles:!0,cancelable:!1}))),console.log(s),s&&(s.style.display="block")}_save(){if(this.saveBtns.forEach((t=>{t.style.display="none"})),!this.style)return alert("К сожалению невозможно сохранить тест. \n\nСообщите об этом владельцу сайта, пожалуйста!"),void console.log("%c Не найдены стили для сохранения ",this.errCSS);this.style.className="";let t=this.el.getAttribute("data-test-link");const s=this.againBtn.href;this.againBtn.href=t||location.origin;let e=this.el.getAttribute("data-test-file-name").replaceAll(" ","_").replaceAll(".","")??"Test_";e=`${e}_от_${this._getDate()}.html`;let n=` <!DOCTYPE HTML>\n\t\t\t\t\t<html lang="ru">\n\t\t\t\t\t\t<head>\n\t\t\t\t\t\t\t\x3c!-- WEB-разработчик данного теста - Дмитрий Богданов https://bdemetrix.github.io --\x3e\n                            <meta charset="UTF-8">\n\t\t\t\t\t\t\t<title>${e}</title>\n\t\t\t\t\t\t\t<meta name="format-detection" content="telephone=no">\n\t\t\t\t\t\t\t<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0">\n\t\t\t\t\t\t\t${this.style.outerHTML}\n\t\t\t\t\t\t</head>\n\t\t\t\t\t\t<body class = "_container">\n\t\t\t\t\t\t\t${this.el.outerHTML}\n\t\t\t\t\t\t\t<scr`;n+="ipt>\n                window.addEventListener('DOMContentLoaded', () => {\n                    setTimeout(() => {\n\t\t\t\t        document.getElementById('psy-test-result').scrollIntoView(true);\n                    }, 100);\n                })\n\t\t\t\t</scr",n+="ipt>\n\t\t\t\t\t\t</body>\n\t\t\t\t\t</html>",this.againBtn.href=s;const i=new Blob([n],{type:"html/plain;charset=UTF-8"}),l=document.createElement("a");l.setAttribute("href",URL.createObjectURL(i)),l.setAttribute("download",e),l.click(),this.saveBtns.forEach((t=>{t.style.display=""}))}_getDate(){let t=new Date,s=t.getFullYear(),e=t.getMonth()+1;e=e<10?"0"+e:e;let n=t.getDate();n=n<10?"0"+n:n;let i=t.getHours();i=i<10?"0"+i:i;let l=t.getMinutes();return l=l<10?"0"+l:l,`${n}_${e}_${s}`}_errorMsg(t){console.log(`%c ${t} `,this.errCSS),alert("К сожалению тест сломался. \n\nСообщите об этом Инне Моисеевой, пожалуйста! \n\n telegram: @innasteplom")}}class BecksAlarmScale{constructor(){this.init()}init(){try{const t=new PsyTestsCalculator(this);new PsyTestsManager(t)}catch(t){throw alert("К сожалению тест сломался. \n\nСообщите об этом Инне Моисеевой, пожалуйста! \n\n telegram: @innasteplom"),t}}getResult(t=0){const s=Math.floor(1e4*t/63)/100,e=`\n        <div class = "psy-test__info-scale">\n            <div class = "psy-test__info-scale-wrap">\n                <div class="psy-test__info-scale-cells" style = "background-size: ${Math.floor(1e4/63)/100}%, 100%;"></div> \n                <div class="psy-test__info-scale-marker" style="width: ${s}%;" ></div>\n                <div class="psy-test__info-scale-cover"></div> \n            </div> \n            <div class="psy-test__info-scale-map">\n                <div class="psy-test__info-scale-item" style="width: 33.33%;">\n                    <span>[ 0 </span><span>21 ]</span>\n                </div>\n                <div class="psy-test__info-scale-item" style="width: 21%;">\n                    <span>[ 22 </span><span>35 ]</span>\n                </div>\n                <div class="psy-test__info-scale-item" style="width: 45.67%;">\n                    <span>[ 36 </span><span>63 ]</span >\n                </div> \n            </div> \n        </div> `,n={};return t>36?(n.modifier="red",n.html=`Потенциально опасный уровень беспокойства и&nbsp;тревоги <div class="psy-test__info-count">Набранных баллов: ${t} </div>`+e):t>22?(n.modifier="yellow",n.html=`Cредня степень тревожности <div class="psy-test__info-count">Набранных баллов: ${t} </div>`+e):(n.modifier="green",n.html=`Низкая степень тревожности <div class="psy-test__info-count">Набранных баллов: ${t}</div>`+e),n}}class BecksDepressionScale{constructor(){this.init()}init(){try{const t=new PsyTestsCalculator(this);new PsyTestsManager(t)}catch(t){throw alert("К сожалению тест сломался. \n\nСообщите об этом Инне Моисеевой, пожалуйста! \n\n telegram: @innasteplom"),t}}getResult(t=0){const s=Math.floor(3e3*t/63)/30,e=`\n        <div class = "psy-test__info-scale">\n            <div class = "psy-test__info-scale-wrap">\n                <div class="psy-test__info-scale-cells" style="background-size: ${Math.floor(3e3/63)/30}%, 100%;"></div> \n                <div class="psy-test__info-scale-marker" style="width: ${s}%;" ></div>\n                <div class="psy-test__info-scale-cover"></div> \n            </div> \n            <div class="psy-test__info-scale-map psy-test__info-scale-map--min">\n                <div class = "psy-test__info-scale-item" style="width: 20.63%;">\n                    <span>[ 0 </span><span>13 ]</span>\n                </div>\n                <div class="psy-test__info-scale-item" style="width: 9.52%;">\n                    <span>[ 14 </span><span>19 ]</span>\n                </div> \n                <div class = "psy-test__info-scale-item" style="width: 14.28%;">\n                    <span> [20 </span><span>28 ]</span >\n                </div>\n                <div class = "psy-test__info-scale-item" style="width: 55.57%;">\n                    <span>[ 29 </span><span>63 ]</span >\n                </div> \n            </div> \n        </div> `,n="becks-depression-scale-exp",i={};return t>28?(i.modifier="red",i.eventId=`${n}-heavy`,i.html=`Депрессия тяжёлой степени <div class="psy-test__info-count">Набранных баллов: ${t} </div>`+e):t>19?(i.modifier="orange",i.eventId=`${n}-expressed`,i.html=`Депрессия средней степени <div class="psy-test__info-count">Набранных баллов: ${t} </div>`+e):t>13?(i.modifier="yellow",i.eventId=`${n}-moderate`,i.html=`Лёгкая степень депрессии <div class="psy-test__info-count">Набранных баллов: ${t} </div>`+e):(i.modifier="green",i.eventId=`${n}-normal`,i.html=`Нормальное состояние <div class="psy-test__info-count">Набранных баллов: ${t}</div> `+e),i}}class BecksHopelessnessScale{constructor(){this.init()}init(){try{const t=new PsyTestsCalculator(this);new PsyTestsManager(t)}catch(t){throw alert("К сожалению тест сломался. \n\nСообщите об этом Инне Моисеевой, пожалуйста! \n\n telegram: @innasteplom"),t}}getResult(t=0){const s=Math.floor(1e4*t/20)/100,e=`\n        <div class = "psy-test__info-scale">\n            <div class = "psy-test__info-scale-wrap">\n                <div class="psy-test__info-scale-cells" style="background-size: ${Math.floor(500)/100}%, 100%;"></div> \n                <div class="psy-test__info-scale-marker" style="width: ${s}%;" ></div>\n                <div class="psy-test__info-scale-cover"></div> \n            </div> \n            <div class="psy-test__info-scale-map">\n                <div class = "psy-test__info-scale-item" style="width: 15%;">\n                    <span>[ 0 </span><span>3 ]</span>\n                </div>\n                <div class="psy-test__info-scale-item" style="width: 25%;">\n                    <span>[ 4 </span><span>8 ]</span>\n                </div> \n                <div class = "psy-test__info-scale-item" style="width: 30%;">\n                    <span> [9 </span><span>14 ]</span >\n                </div>\n                <div class = "psy-test__info-scale-item" style="width: 30%;">\n                    <span>[ 15 </span><span>20 ]</span >\n                </div> \n            </div> \n        </div> `,n={};return t>14?(n.modifier="red",n.html=`Тяжелая степень безнадёжности <div class="psy-test__info-count">Набранных баллов: ${t} </div>`+e):t>8?(n.modifier="orange",n.html=`Умеренная степень безнадёжности <div class="psy-test__info-count">Набранных баллов: ${t} </div>`+e):t>3?(n.modifier="yellow",n.html=`Лёгкая степень безнадёжности <div class="psy-test__info-count">Набранных баллов: ${t} </div>`+e):(n.modifier="green",n.html=`Безнадёжность не выявлена <div class="psy-test__info-count">Набранных баллов: ${t}</div> `+e),n}}class BecksSuicidalScale{constructor(){this.init()}init(){try{const t=new PsyTestsCalculator(this);new PsyTestsManager(t)}catch(t){throw alert("К сожалению тест сломался. \n\nСообщите об этом Инне Моисеевой, пожалуйста! \n\n telegram: @innasteplom"),t}}getResult(t=0){const s=Math.floor(1e4*t/38)/100,e=`\n        <div class = "psy-test__info-scale">\n            <div class = "psy-test__info-scale-wrap">\n                <div class="psy-test__info-scale-cells" style="background-size: ${Math.floor(1e4/38)/100}%, 100%;"></div> \n                <div class="psy-test__info-scale-marker" style="width: ${s}%;" ></div>\n                <div class="psy-test__info-scale-cover"></div> \n            </div> \n            <div class="psy-test__info-scale-map">\n                <div class = "psy-test__info-scale-item" style="width: 15.79%;">\n                    <span>[ 0 </span><span>6 ]</span>\n                </div>\n                <div class="psy-test__info-scale-item" style="width: 84.21%;">\n                    <span>[ 7 </span><span>38 ]</span>\n                </div>\n            </div> \n        </div> `,n={};return n.html=`Риск суицида на&nbsp;момент интервью: ${t}&nbsp;из&nbsp;38 <div class="psy-test__info-count">Пороговое значение: 6 баллов </div>`+e,n.modifier=t>20?"red":t>12?"orange":t>6?"yellow":"green",n}}
