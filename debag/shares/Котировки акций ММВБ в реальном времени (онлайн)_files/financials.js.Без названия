function AttachFinancialsCSVs(n)
{
	function b64EncodeUnicode(str) {
		// first we use encodeURIComponent to get percent-encoded UTF-8,
		// then we convert the percent encodings into raw bytes which
		// can be fed into btoa.
		return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g,
			function toSolidBytes(match, p1) {
				return String.fromCharCode('0x' + p1);
		}));
	}

	function BuildCSV(table)
	{
		var aTableData = [];
		var oCol2Delete = {};

		var trs = $(table).find('tr');
		trs.each(function(ir, row)
		{
			if ((ir > 1) && ((ir + 1) < trs.length))
			{
				var aRow = [];
				$(row).find(' > th, > td').each(function(ic, col)
				{
					var c = $(col).clone();
					var sValue = null;
					switch ($(row).attr('field'))
					{
						case 'date':
						{
							sValue = c.text().replace(/(\t|\s)+/g, ' ');
							break;
						}

						case 'report_url':
						case 'year_report_url':
						case 'presentation_url':
						{
							return true;
						}

						default: 
						{
							if (c.find('strong').length) c = c.find('strong');
							sValue = c.text().replace(/(\t|\s)+/g, ' ').replace(/\./g, ',');
						}
					}

					aRow.push($.trim(sValue));

					if ($(col).find('.charticon2').length) oCol2Delete[ic] = true;
					if (ic == 1) oCol2Delete[ic] = true;
					if (ic == 8) oCol2Delete[ic] = true;
				});

				if (!$(row).hasClass('company_report_separator') && aRow.length) aTableData.push(aRow);
			}
		});

		var aCol2Delete = [];
		for (var i in oCol2Delete)
		{
			aCol2Delete.push(i);
		}
		aCol2Delete.sort(function(a,b)
		{
			return a - b;
		}).reverse();

		$.each(aCol2Delete, function(i, c2di)
		{
			$.each(aTableData, function(i, aRow)
			{
				aTableData[i].splice(c2di, 1);
			});
		});

		var sCsv = '';
		$.each(aTableData, function(i, aRow)
		{
			var sRow = '';
			$.each(aRow, function(ii, sCol)
			{
				if (sRow != '') sRow += ';';
				sRow += '"' + sCol.replace(/\"/g, '\"') + '"';
			});

			sCsv += sRow + "\r\n";
		});

		return sCsv;
	}


	$(n).each(function(i, table)
	{
		var csv = "\ufeff" + BuildCSV(table);

		var a = $('<a/>');
		a.attr('href', 'data:text/csv;base64,' + b64EncodeUnicode(csv));
		a.attr('title', '<b><u>Скачать таблицу в виде CSV файла</u></b>.<br />Если у вас неверно определяется кодировка, выберите в Excel пункт меню<br />&quot;Данные&quot; --> &quot;Из текстового/CSV файла&quot; и выберите кодировку &quot;Юникод (UTF-8)&quot;.');
		a.attr('download', $(table).attr('financials-csv-download-data') + '.csv');
		a.addClass('download-table');
		if (navigator.msSaveBlob) a.addClass('ie');
		
		a.jBox('Tooltip', {
			maxWidth: '300px'
		});

		var item = $('<li/>').addClass('download-financials');
		item.append(a);
		item.prependTo($(table).find('.tabs-block').find('.tabs')[1]);


		// $(table).wrap('<div class="trades-table-wrapper"></div>');
		// $(table).parents('.trades-table-wrapper').append(a);
	});
}

jQuery(document).ready(function($)
{

	AttachFinancialsCSVs('[financials-csv-download-data]');
	// кастыль для старых IE
	$('.download-table.ie').on('click', function(e)
	{
		e.preventDefault();
		var sData = $(this).attr('href');
		sData = sData.substr(sData.indexOf(',') + 1);
		sData = decodeURIComponent(atob(sData).split('').map(function(c)
		{
        	return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
    	}).join(''));


		var oBlob = new Blob([sData], {type:  'text/csv;charset=utf-8;'});
		navigator.msSaveOrOpenBlob(oBlob, $(this).attr('download'));
	});

	if ($('.tabs-block .download-financials.static a').length)
	{
		$('.tabs-block .download-financials.static a')
			.attr('title', '<b><u>Скачать таблицу в виде CSV файла</u></b>.<br />Если у вас неверно определяется кодировка, выберите в Excel пункт меню<br />&quot;Данные&quot; --> &quot;Из текстового/CSV файла&quot; и выберите кодировку &quot;Юникод (UTF-8)&quot;.')
			.jBox('Tooltip', {
				maxWidth: '300px'
		});
	}

	$('.financials.compare').on('click', '.removelink', function()
	{
		var compareId = $(this).attr('compare-id');
		var removeCompareDialog = new jBox('Confirm', 
		{
			id: 'removeCompareDialog',
			title: 'Внимание!',
			confirmButton: 'ОК',
			cancelButton: 'Отмена',
			content: 'Удалить отчет из списка?',
			confirm: function()
			{
				var data = {action: 'remove', compare_id: compareId, security_ls_key: LIVESTREET_SECURITY_KEY};

				$.post(aRouter['q'] + 'compare-ajax/', data, function(result)
				{
					if (!result)
					{
						msgErrorBox.alert('Error', 'Please try again later');
					}

					if (result.bStateError)
					{
						msgErrorBox.alert(result.sMsgTitle, result.sMsg);
					} else
					{
						msgNoticeBox.alert(result.sMsgTitle, result.sMsg);
						setTimeout(function(e)
						{
							document.location.reload();

						}, 1000);
					}
				});

			}, onCloseComplete: function()
			{
				this.destroy();
			}
		});
		removeCompareDialog.open();
	}).on('click', '.clearlist', function()
	{
		var type = $(this).attr('report-type');
		var quarter = $(this).attr('report-quarter');

		var clearCompareDialog = new jBox('Confirm', 
		{
			id: 'clearCompareDialog',
			title: 'Внимание!',
			confirmButton: 'ОК',
			cancelButton: 'Отмена',
			content: 'Очистить список сравнения?',
			confirm: function()
			{
				var data = {action: 'clear', type: type, security_ls_key: LIVESTREET_SECURITY_KEY};
				if (quarter) data['quarter'] = quarter;


				$.post(aRouter['q'] + 'compare-ajax/', data, function(result)
				{
					if (!result)
					{
						msgErrorBox.alert('Error', 'Please try again later');
					}

					if (result.bStateError)
					{
						msgErrorBox.alert(result.sMsgTitle, result.sMsg);
					} else
					{
						msgNoticeBox.alert(result.sMsgTitle, result.sMsg);
						setTimeout(function(e)
						{
							document.location.reload();

						}, 1000);
					}
				});

			}, onCloseComplete: function()
			{
				this.destroy();
			}
		});
		clearCompareDialog.open();

	}).on('click', '.addreport', function()
	{
		var type = $(this).attr('report-type');
		var quarter = $(this).attr('report-quarter');


		function getYearsList(iArticleId)
		{
			var d = $.Deferred();
			var data = {action: 'list', article_id: iArticleId, type: type, security_ls_key: LIVESTREET_SECURITY_KEY};
			if (quarter) data['quarter'] = quarter;

			$.ajax({
			type: 'POST',
			url: aRouter['q'] + 'compare-ajax/',
			data: data}).then(function(result)
			{
				if (!result)
				{
					d.reject('Error', 'Please try again later');
					return;
				}

				if (result.bStateError)
				{
					d.reject(result.sMsgTitle, result.sMsg);
				} else
				{
					d.resolve(result.sMsgTitle, result.sMsg, result.years);
				}
			});
			return d;
		}

		function getQuartersList(iArticleId, sYear)
		{
			var d = $.Deferred();
			var data = {action: 'list', article_id: iArticleId, type: type, year: sYear, security_ls_key: LIVESTREET_SECURITY_KEY};
			if (quarter) data['quarter'] = quarter;

			$.ajax({
			type: 'POST',
			url: aRouter['q'] + 'compare-ajax/',
			data: data}).then(function(result)
			{
				if (!result)
				{
					d.reject('Error', 'Please try again later');
					return;
				}

				if (result.bStateError)
				{
					d.reject(result.sMsgTitle, result.sMsg);
				} else
				{
					d.resolve(result.sMsgTitle, result.sMsg, result.quarters);
				}
			});
			return d;
		}


		var iArticleId = null;
		var addCompareDialog = new jBox('Confirm', 
		{
			id: 'addCompareDialog',
			title: 'Добавление отчета к сравнению',
			confirmButton: 'Добавить',
			cancelButton: 'Отмена',

			content: '\
							<label for="company_title">Компания:</label><br />\
							<input id="company_title" type="text" name="title" autocomplete="off" /><br />\
							<label for="report_year">Год отчета:</label><br />\
							<select id="report_year" name="year"></select><br />\
							<div id="quarter_div">\
								<label for="report_quarter">Квартал отчета:</label><br />\
								<select id="report_quarter" name="quarter"></select>\
							</div>\
					',

			confirm: function()
			{
				var data = {action:'add', article_id: iArticleId, type: type, year: addCompareDialog.wrapper.find('select[name="year"]').val(), security_ls_key: LIVESTREET_SECURITY_KEY};
				if (quarter) data['quarter'] = addCompareDialog.wrapper.find('select[name="quarter"]').val();

				$.ajax({
					type: 'POST',
					url: aRouter['q'] + 'compare-ajax/',
					data: data}).then(function(result)
					{
						if (!result)
						{
							msgErrorBox.alert('Error', 'Please try again later');
							return;
						}

						if (result.bStateError)
						{
							msgErrorBox.alert(result.sMsgTitle, result.sMsg);
						} else
						{
							msgNoticeBox.alert(result.sMsgTitle, result.sMsg);
							setTimeout(function(e)
							{
								document.location.reload();

							}, 1000);
						}
					});
			},

			onOpen: function()
			{
				var that = this;

				var nYears = that.wrapper.find('select[name="year"]');
				var nQuarters = that.wrapper.find('select[name="quarter"]');

				if (quarter) that.wrapper.find('div#quarter_div').show();

				nYears.on('change', function()
				{
					nQuarters.empty().attr('disabled', true);
					if (nYears.val() == 'LTM') return;					

					if (quarter)
					{
						getQuartersList(iArticleId, nYears.val()).then(function(sTitle, sMsg, aQuarters)
						{
							nQuarters.empty();
							$.each(aQuarters, function(i, v)
							{
								$('<option/>').val(v).text(v).appendTo(nQuarters);
							});
							if (aQuarters.length) nQuarters.removeAttr('disabled');
						}, function(sMsgTitle, sMsg)
						{
							msgErrorBox.alert(sMsgTitle, sMsg);
						});
					}

				}).empty().attr('disabled', true);
				nQuarters.empty().attr('disabled', true);


				var ac = that.wrapper.find('input[name="title"]').autocomplete({
					serviceUrl: '/forum/ajaxsearchticker/',
					type: 'POST',
					dataType: 'json',
					paramName: 'value',
					params: {'json': 1},
					preventBadQueries: false,
					zIndex: 99999,
					
					transformResult: function(response)
					{
						return { suggestions: response['results'] };
					},

					onSelect: function (suggestion)
					{
						if (suggestion.data != iArticleId) ac.trigger('change');
					}

				}).on('change', function(e)
				{
					var nAc = $(this).autocomplete();
					var sVal = nAc.currentValue.toLowerCase();
					var oldArticleId = iArticleId;
					iArticleId = null;

					if (nAc.selection == null)
					{
						if (nAc.suggestions.length)
						{
							$.each(nAc.suggestions, function(i,v)
							{
								if ((v.value.toLowerCase() == sVal) || (v.symbol.toLowerCase() == sVal) || (v.ticker.toLowerCase() == sVal))
								{
									iArticleId = v.data;
									return false;
								}
							});
						}
					} else
					{
						iArticleId = nAc.selection.data;
					}

					if (iArticleId == oldArticleId) return;

					nYears.empty().attr('disabled', true);
					nQuarters.empty().attr('disabled', true);

					if (iArticleId)
					{
						getYearsList(iArticleId).then(function(sTitle, sMsg, aYears)
						{
							nYears.empty();
							$.each(aYears, function(i, v)
							{
								$('<option/>').val(v).text(v).appendTo(nYears);
							});
							if (aYears.length) nYears.removeAttr('disabled');
							nYears.trigger('change');
						
						}, function(sMsgTitle, sMsg)
						{
							msgErrorBox.alert(sMsgTitle, sMsg);
						});
					}
				});
			},

			onClose: function()
			{
				this.wrapper.find('select[name="year"]').off('change');
				this.wrapper.find('input[name="title"]').autocomplete('dispose');
			},

			onCloseComplete: function()
			{
				this.destroy();
			}
		});

		addCompareDialog.open();
	});
});